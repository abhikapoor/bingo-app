{"version":3,"sources":["sound.wav","mouse-click.wav","error.mp3","box.js","App.js","index.js"],"names":["Box","props","question","id","className","lock","fill","viewBox","stroke","d","onClick","ev","preventDefault","startGame","correct","incorrect","bingo","in_correct","is_selected","index","App","useState","setQuestions","setLock","bounce","setBounce","setCorrect","setInorrect","setBingo","all_selected","useEffect","questions","handleClick","selected","answer","newArr","Audio","click","play","is_adjacent_row_selected","is_adjacent_column_selected","is_main_diagonal_selected","is_anti_diagonal_selected","sound","setTimeout","checkResult","error","filter","item","position","every","is_main_diagonal","is_anti_diagonal","map","currentLock","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAAe,G,KAAA,IAA0B,mCCA1B,MAA0B,wCCA1B,MAA0B,kC,eCoG1BA,MA9Ff,SAAaC,GAST,OACI,oCAC0B,KAAtBA,EAAMC,SAASC,GAAY,qBAAKC,UAAU,8EAAf,SAEvB,sBAAKA,UAAU,uCAAf,UAEIH,EAAMI,KAAO,sBAAKD,UAAU,4CAAf,UACT,qBAAKA,UAAU,wCAAwCE,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAA9F,SACI,sBAAMC,EAAE,iCAEZ,qBAAKL,UAAU,mHAAf,SACI,qBAAKM,QACG,SAACC,GACGA,EAAGC,iBACHX,EAAMY,aAGdT,UAAU,oCANd,wBAQC,sBAAKA,UAAU,0EAAf,UACL,2CACIH,EAAMa,QADV,OAGA,6CACIb,EAAMc,aAEV,0CACId,EAAMe,YAvBlB,SA6BK,sBAAKZ,UAAS,uGAEfH,EAAMC,SAASe,WAAa,4DAA+DhB,EAAMC,SAASY,QAAW,8DAAgE,WAFtK,YAIfb,EAAMI,KAAO,wDAA0D,0CAJtE,UAOL,qBAAKD,UAAU,+BAAf,SACI,mBAAGA,UAAU,+CAAb,SAEIH,EAAMC,SAASA,aAGvB,sBAAKE,UAAU,+BAAf,UAEI,qBAAKM,QACG,SAACC,GACGA,EAAGC,iBACCX,EAAMI,MAAQJ,EAAMC,SAASgB,aAKjCjB,EAAMS,QAAQT,EAAMkB,MAAOlB,EAAMC,UAAU,IAGnDE,UAAU,+IAXd,kBAeA,qBAAKM,QACG,SAACC,GACGA,EAAGC,iBACCX,EAAMI,MAAQJ,EAAMC,SAASgB,aAKjCjB,EAAMS,QAAQT,EAAMkB,MAAOlB,EAAMC,UAAU,IAGnDE,UAAU,wIAXd,yBA9DZ,QCgHOgB,MAzHf,WACI,MAAiCC,mBAAS,IAA1C,mBAAOnB,EAAP,KAAiBoB,EAAjB,KACA,EAAwBD,oBAAS,GAAjC,mBAAOhB,EAAP,KAAakB,EAAb,KACA,EAA4BF,qBAA5B,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA8BJ,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBY,EAAhB,KACA,EAAiCL,mBAAS,GAA1C,mBAAON,EAAP,KAAkBY,EAAlB,KACA,EAA0BN,mBAAS,GAAnC,mBAAOL,EAAP,KAAcY,EAAd,KACA,EAAuCP,oBAAS,GAAhD,mBAAOQ,EAAP,UAIAC,qBAAU,WACNR,EAAaS,KACd,IAEH,IAYMC,EAAc,SAACb,EAAOc,EAAUC,GAClC,IAAIC,EAAM,YAAOjC,GAGjB,GAFAiC,EAAOhB,GAAOD,aAAc,EAC5BI,EAAaa,GACTF,EAASC,SAAWA,EAAQ,CAChB,IAAIE,MAAMC,GAChBC,OACN,IAAIH,EAAM,YAAOjC,GACjBiC,EAAOhB,GAAOL,SAAUmB,EAASnB,QACjCQ,EAAaa,GArBD,SAACF,IACbM,EAAyBN,IAAaO,EAA4BP,IAAaQ,EAA0BR,IAAaS,EAA0BT,MAChJL,EAASZ,EAAQ,GACL,IAAIoB,MAAMO,GAChBL,OACNb,EAAU,iBACVmB,YAAW,WACPnB,EAAU,MACX,MAcHoB,CAAYZ,GACZP,EAAWZ,EAAU,OAClB,CACS,IAAIsB,MAAMU,GAChBR,OACN,IAAIH,EAAM,YAAOjC,GACjBiC,EAAOhB,GAAOF,YAAagB,EAAShB,WACpCK,EAAaa,GACbR,EAAYZ,EAAY,KAO1BwB,EAA2B,SAAAN,GAC7B,OAAO/B,EAAS6C,QAAO,SAACC,GACpB,OAAOA,EAAKC,SAAS,IAAMhB,EAASgB,SAAS,MAC9CC,OAAM,SAACF,GACN,OAAOA,EAAKlC,YAId0B,EAA8B,SAAAP,GAChC,OAAO/B,EAAS6C,QAAO,SAACC,GACpB,OAAOA,EAAKC,SAAS,IAAMhB,EAASgB,SAAS,MAC9CC,OAAM,SAACF,GACN,OAAOA,EAAKlC,YAId2B,EAA4B,SAAAR,GAC9B,OAAO/B,EAAS6C,QAAO,SAACC,GACpB,OAAOf,EAASkB,mBAAqBH,EAAKG,oBAC3CD,OAAM,SAACF,GACN,OAAOA,EAAKlC,YAId4B,EAA4B,SAAAT,GAC9B,OAAO/B,EAAS6C,QAAO,SAACC,GACpB,OAAOf,EAASmB,mBAAqBJ,EAAKI,oBAC3CF,OAAM,SAACF,GACN,OAAOA,EAAKlC,YAWpB,OAEI,qBAAKV,UAAU,+FAAf,SACI,sBAAKA,UAAS,UACPoB,EADO,wEAAd,UAIItB,EAASmD,KAAI,SAACL,EAAM7B,GAChB,OAAO,cAAC,EAAD,CAAKjB,SAAU8C,EAClB3C,KAAMA,EACNW,MACEA,EACFF,QACEA,EACFC,UAAWA,EACXc,aAAcA,EAIdnB,QAASsB,EACTnB,UACE,kBAAMU,GAAQ,SAAA+B,GAAW,OAAKA,MAChCnC,MAAOA,GALH6B,EAAK7C,OAdrB,UChGZoD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.09351a4b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sound.5e8c43f9.wav\";","export default __webpack_public_path__ + \"static/media/mouse-click.3753733f.wav\";","export default __webpack_public_path__ + \"static/media/error.ea6f95b9.mp3\";","import React, {useState, useEffect} from 'react';\n// import Countdown from 'react-countdown';\nimport './styles/output.css'\nimport './App.css';\n\n\nfunction Box(props) { // Renderer callback with condition\n    const renderer = ({hours, minutes, seconds, completed}) => {\n        if (completed) { // Render a completed state\n            return <h1>Done</h1>\n        } else { // Render a countdown\n            return <span>{hours}:{minutes}:{seconds}</span>;\n        }\n    };\n\n    return (\n        <div> {\n            props.question.id === 13 ? <div className=\"bg-blue-200 w-16 h-16 sm:w-32 sm:h-32 lg:w-36 lg:h-36 p-2 rounded shadow-lg\">\n\n                <div className=\"flex flex-col justify-center sm:mt-5\">\n                    {\n                    props.lock ? <div className=\"flex flex-col justify-center items-center\">\n                        <svg className=\"animate-bounce w-6 h-6 text-amber-900\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path d=\"M19 14l-7 7m0 0l-7-7m7 7V3\"></path>\n                        </svg>\n                        <div className=\"h-4 w-14 sm:h-8 sm:w-24 px-4 bg-yellow-400 hover:bg-blue-700 text-white rounded flex justify-center items-center\">\n                            <div onClick={\n                                    (ev) => {\n                                        ev.preventDefault();\n                                        props.startGame()\n                                    }\n                                }\n                                className=\"text-xs sm:text-sm cursor-pointer\">START</div>\n                        </div>\n                    </div> : <div className=\"flex flex-col justify-center items-center text-xxs sm:text-sm font-bold\">\n                        <p>Correct : {\n                            props.correct\n                        } </p>\n                        <p>Incorrect : {\n                            props.incorrect\n                        }</p>\n                        <p>Bingos : {\n                            props.bingo\n                        }</p>\n\n                    </div>\n                } </div>\n\n            </div> : <div className={\n                `p-2 rounded w-16 h-16 sm:w-32 sm:h-32 lg:w-36 lg:h-36 shadow-lg flex flex-col justify-center ${\n                    props.question.in_correct ? \"blur-xs bg-red-300 cursor-not-allowed pointer-events:none\" : (props.question.correct) ? \"blur-xs bg-green-300 cursor-not-allowed pointer-events:none\" : \"bg-white\"\n                } ${\n                    props.lock ? \"filter blur-sm cursor-not-allowed pointer-events:none\" : \"filter blur-none pointer-events:cursor\"\n                }`\n            }>\n                <div className=\"h-14 sm:h-16 md:h-20 lg:h-24\">\n                    <p className=\"text-green-800 font-mono text-xxs sm:text-xs\">\n                        {\n                        props.question.question\n                    }</p>\n                </div>\n                <div className=\"flex flex-row justify-center\">\n\n                    <div onClick={\n                            (ev) => {\n                                ev.preventDefault();\n                                if (props.lock || props.question.is_selected) \n                                    return;\n                                \n\n\n                                props.onClick(props.index, props.question, true)\n                            }\n                        }\n                        className=\"h-3 w-6 sm:w-12 sm:h-6 px-3 text-xs bg-green-500 rounded text-white mr-2 text-xxs sm:text-xs flex justify-center items-center cursor-pointer\">\n                        True\n                    </div>\n\n                    <div onClick={\n                            (ev) => {\n                                ev.preventDefault();\n                                if (props.lock || props.question.is_selected) \n                                    return;\n                                \n\n\n                                props.onClick(props.index, props.question, false)\n                            }\n                        }\n                        className=\"h-3 w-6 sm:w-12 sm:h-6 px-3 text-xs bg-red-500 rounded text-white text-xxs sm:text-xs flex justify-center items-center cursor-pointer\">\n                        False\n                    </div>\n\n\n                </div>\n            </div>\n        } </div>\n    );\n}\n\nexport default Box;\n","import React, {useState, useEffect} from 'react';\nimport questions from './questions.json'\nimport './styles/output.css'\nimport sound from './sound.wav'\nimport click from './mouse-click.wav'\nimport error from './error.mp3'\nimport Box from './box.js';\nfunction App() {\n    const [question, setQuestions] = useState([]);\n    const [lock, setLock] = useState(true);\n    const [bounce, setBounce] = useState();\n    const [correct, setCorrect] = useState(0);\n    const [incorrect, setInorrect] = useState(0);\n    const [bingo, setBingo] = useState(0);\n    const [all_selected, setAllSelected] = useState(false);\n\n\n    // Similar to componentDidMount and componentDidUpdate:\n    useEffect(() => { // Update the document title using the browser API\n        setQuestions(questions)\n    }, []);\n\n    const checkResult = (selected) => {\n        if (is_adjacent_row_selected(selected) || is_adjacent_column_selected(selected) || is_main_diagonal_selected(selected) || is_anti_diagonal_selected(selected)) {\n            setBingo(bingo + 1);\n            let audio = new Audio(sound);\n            audio.play()\n            setBounce('animate-pulse')\n            setTimeout(function () {\n                setBounce('')\n            }, 2000);\n        }\n    }\n\n    const handleClick = (index, selected, answer) => {\n        let newArr = [...question]\n        newArr[index].is_selected = true;\n        setQuestions(newArr)\n        if (selected.answer === answer) {\n            let audio = new Audio(click);\n            audio.play()\n            let newArr = [...question]\n            newArr[index].correct = selected.correct ? false : true;\n            setQuestions(newArr)\n            checkResult(selected)\n            setCorrect(correct + 1)\n        } else {\n            let audio = new Audio(error);\n            audio.play()\n            let newArr = [...question]\n            newArr[index].in_correct = selected.in_correct ? false : true;\n            setQuestions(newArr)\n            setInorrect(incorrect + 1)\n        }\n        // setLock(check_all_selected);\n\n    }\n\n\n    const is_adjacent_row_selected = selected => {\n        return question.filter((item) => {\n            return item.position[0] == selected.position[0]\n        }).every((item) => {\n            return item.correct\n        })\n    }\n\n    const is_adjacent_column_selected = selected => {\n        return question.filter((item) => {\n            return item.position[1] == selected.position[1]\n        }).every((item) => {\n            return item.correct\n        })\n    }\n\n    const is_main_diagonal_selected = selected => {\n        return question.filter((item) => {\n            return selected.is_main_diagonal === item.is_main_diagonal;\n        }).every((item) => {\n            return item.correct\n        })\n    }\n\n    const is_anti_diagonal_selected = selected => {\n        return question.filter((item) => {\n            return selected.is_anti_diagonal === item.is_anti_diagonal;\n        }).every((item) => {\n            return item.correct\n        })\n    }\n\n    const check_all_selected = selected => {\n        return question.every((item) => {\n            return item.is_selected\n        })\n    }\n\n\n    return (\n\n        <div className=\"bg-gradient-to-r from-yellow-100 to-yellow-300 min-h-screen flex items-center justify-center\">\n            <div className={\n                `${bounce} grid grid-cols-5 sm:grid-cols-5 lg:grid-cols-5 xl:grid-cols-5 gap-1`\n            }>\n                {\n                question.map((item, index) => {\n                    return <Box question={item}\n                        lock={lock}\n                        bingo\n                        ={bingo}\n                        correct\n                        ={correct}\n                        incorrect={incorrect}\n                        all_selected={all_selected}\n                        key={\n                            item.id\n                        }\n                        onClick={handleClick}\n                        startGame\n                        ={() => setLock(currentLock => !currentLock)}\n                        index={index}></Box>\n            })\n            } </div>\n        </div>\n\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}